install.packages("KernSmooth")
library(KernSmooth)
install.packages("rpart")
add2 <- function(x, y){
x + y
}
add2(3, 5)
use <- x>10
use <- x > 10
above10 <- function(x){
use <- x > 10
x[use]
}
x <- 1:20
above(x)
above(x,12)
above <- function(x,n){
use <- x > n
x[use]
}
above <- function(x,n){
use <- x > n
x[use]
}
above(x,12)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x,n = 10){
use <- x > n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean((airquality))
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
source('~/.active-rstudio-document')
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE
)
x <- list(a = 1:4, b = rnorm(10))
x
x <- list(a = 1:4, b = 1)
x
?gl
gl(2, 1, 20)
x <- rnorm(10)
f1 <- gl(2, 5)
split(x,f1)
x
f2 <- g(5, 2)
f2 <- gl(5, 2)
split(x, f2)
split(x, list(1, 2)
)
split(x, list(f1, f2)
)
?split
ma <- cbind(x = 1:10, y = (-4:5)^2)
ma
col(ma)
?split
split(x, list(f1, f2), sep = :)
split(x, list(f1, f2), sep = ":")
split(x, f1)
split(x, f2)
split(x, list(f1, f2))
debug(lm)
lm(y~x)
options(error = recover)
read.csv("nosuchfile")
library(datasets)
data(iris)
?iris
iris
split(iris, iris$Species)
s <- split(iris, iris$Species)
s
sapply(s, function(x) {colMeans(x[, "Sepal.Length"])})
str(s)
sapply(s, function(x) {colMeans(x[, "Sepal.Length"])})
sapply(s, function(x) {colMeans(x[, "Sepal.Length"])})
split(x, "virginica")
split(s, "virginica")
s
sapply(s, function(x) {colMeans(x[, "Sepal.Length"])})
sapply(as.list(s), function(x) {colMeans(x[, "Sepal.Length"])})
str(s)
s$virginica
s1 <- s$virginica
colMeans(s1, s1[, "Sepal.Length"])
s2 <- s1$Sepal.Length
s2
mean(s2)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mwan)
apply(iris, 1, mean)
apply(iris, 2, mean)
iris
colMeans(iris)
apply(iris[,1:4], 2, mean)
apply(iris, 2, mean)
length(iris)
data(mtcars)
?mtcars
mtcars
str(mtcars)
str(s)
sapply(s[, 1:4], function(x) {
+ colMeans(x[, "Spec.Length"])
+ })
0
sapply(s[, 1:4], function(x) {
+ colMeans(x[, "Spec.Length"])
+ })
0
sapply(s[, 1:4], function(x) {colMeans(x[, "Spec.Length"]})
0
sapply(s[, 1:4], function(x) {colMeans(x[, "Spec.Length"]})
0
sapply(s[, 1:4], function(x) {colMeans(x[, "Spec.Length"])
)
sapply(s[, 1:4], function(x) {colMeans(x[, "Spec.Length"])})
s[,1:4]
0
s
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?with
with(mtcars, tapply(mpg,cyl,mean))
sapply(split(mtcars$mpg,mtcars$cyl))
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(split(iris$Sepal.Length,iris$Species),mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$horsepower, mtcars$cyl, mean)
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
hah <_ tapply(mtcars$hp, mtcars$cyl, mean)
hah <- tapply(mtcars$hp, mtcars$cyl, mean)
hah[1]-hah[3]
debug(ls)
ls
?mtcars
tapply(iris$Spec.Length, iris$Species, mean)
0
tapply(iris$Spec.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
clear
setwd("G:/Reference/DataScience/R-Programming/ProgrammingAssignment2")
options(erro)
